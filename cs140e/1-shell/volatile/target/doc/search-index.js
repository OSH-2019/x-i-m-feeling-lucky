var N=null,E="",T="t",U="u",searchIndex={};
var R=["volatile","A wrapper type that enforces volatile (read or write)…","result","try_from","try_into","borrow","borrow_mut","type_id","typeid","inner","Readable","Writeable","ReadableWriteable","ReadVolatile","WriteVolatile","Volatile","UniqueVolatile","Wrapper types that guarantee read-only, write-only, or…","A wrapper type that enforces read-only volatile accesses…","A wrapper type that enforces write-only volatile accesses…","Trait implemented by readable volatile wrappers.","Returns the inner pointer.","Reads and returns the value pointed to by `self`. The read…","has_mask","Returns `true` if the value pointed to by `self` has the…","Trait implemented by writeable volatile wrappers.","Returns the inner pointer. This function is unsafe because…","Writes the value `val` to the inner address of `self`. The…","Trait implemented by readable and writeable volatile…","and_mask","Applies the mask `mask` using `&` to the value referred to…","Applies the mask `mask` using `|` to the value referred to…","Returns a new `ReadVolatile` that allows volatile…","readvolatile","Returns a new `WriteVolatile` that allows volatile…","writevolatile","Returns a new `Volatile` that allows volatile read/write…","Returns a new `UniqueVolatile` that allows volatile…","uniquevolatile"];
searchIndex[R[0]]={"doc":R[17],"i":[[3,R[13],R[0],R[18],N,N],[3,R[14],E,R[19],N,N],[3,R[15],E,R[1],N,N],[3,R[16],E,R[1],N,N],[8,R[10],E,R[20],N,N],[10,R[9],E,R[21],0,[[["self"]]]],[11,"read",E,R[22],0,[[["self"]],[T]]],[11,R[23],E,R[24],0,[[["self"],[T]],["bool"]]],[8,R[11],E,R[25],N,N],[10,R[9],E,R[26],1,[[["self"]]]],[11,"write",E,R[27],1,[[["self"],[T]]]],[8,R[12],E,R[28],N,N],[11,R[29],E,R[30],2,[[["self"],[T]]]],[11,"or_mask",E,R[31],2,[[["self"],[T]]]],[11,"new",E,R[32],3,[[],[R[33]]]],[11,"new",E,R[34],4,[[],[R[35]]]],[11,"new",E,R[36],5,[[],[R[0]]]],[11,"new",E,R[37],6,[[],[R[38]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,R[9],E,E,3,[[["self"]]]],[11,R[9],E,E,5,[[["self"]]]],[11,R[9],E,E,6,[[["self"]]]],[11,R[9],E,E,4,[[["self"]]]],[11,R[9],E,E,5,[[["self"]]]],[11,R[9],E,E,6,[[["self"]]]]],"p":[[8,R[10]],[8,R[11]],[8,R[12]],[3,R[13]],[3,R[14]],[3,R[15]],[3,R[16]]]};
searchIndex[R[0]]={"doc":R[17],"i":[[3,R[13],R[0],R[18],N,N],[3,R[14],E,R[19],N,N],[3,R[15],E,R[1],N,N],[3,R[16],E,R[1],N,N],[8,R[10],E,R[20],N,N],[10,R[9],E,R[21],0,[[["self"]]]],[11,"read",E,R[22],0,[[["self"]],[T]]],[11,R[23],E,R[24],0,[[["self"],[T]],["bool"]]],[8,R[11],E,R[25],N,N],[10,R[9],E,R[26],1,[[["self"]]]],[11,"write",E,R[27],1,[[["self"],[T]]]],[8,R[12],E,R[28],N,N],[11,R[29],E,R[30],2,[[["self"],[T]]]],[11,"or_mask",E,R[31],2,[[["self"],[T]]]],[11,"new",E,R[32],3,[[],[R[33]]]],[11,"new",E,R[34],4,[[],[R[35]]]],[11,"new",E,R[36],5,[[],[R[0]]]],[11,"new",E,R[37],6,[[],[R[38]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,R[9],E,E,3,[[["self"]]]],[11,R[9],E,E,5,[[["self"]]]],[11,R[9],E,E,6,[[["self"]]]],[11,R[9],E,E,4,[[["self"]]]],[11,R[9],E,E,5,[[["self"]]]],[11,R[9],E,E,6,[[["self"]]]]],"p":[[8,R[10]],[8,R[11]],[8,R[12]],[3,R[13]],[3,R[14]],[3,R[15]],[3,R[16]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);